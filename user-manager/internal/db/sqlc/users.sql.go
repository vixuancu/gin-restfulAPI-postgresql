// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: users.sql

package sqlc

import (
	"context"

	"github.com/google/uuid"
)

const createUser = `-- name: CreateUser :one
insert into users (name, email) values ($1, $2) returning user_id, uuid, name, email, created_at
`

type CreateUserParams struct {
	Name  string `json:"name"`
	Email string `json:"email"`
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRow(ctx, createUser, arg.Name, arg.Email)
	var i User
	err := row.Scan(
		&i.UserID,
		&i.Uuid,
		&i.Name,
		&i.Email,
		&i.CreatedAt,
	)
	return i, err
}

const getUser = `-- name: GetUser :one
select user_id, uuid, name, email, created_at from users where uuid = $1
`

func (q *Queries) GetUser(ctx context.Context, argUuid uuid.UUID) (User, error) {
	row := q.db.QueryRow(ctx, getUser, argUuid)
	var i User
	err := row.Scan(
		&i.UserID,
		&i.Uuid,
		&i.Name,
		&i.Email,
		&i.CreatedAt,
	)
	return i, err
}
